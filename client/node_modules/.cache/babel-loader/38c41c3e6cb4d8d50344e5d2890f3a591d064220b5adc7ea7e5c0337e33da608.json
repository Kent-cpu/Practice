{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rusla\\\\Desktop\\\\\\u041A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\Practice\\\\client\\\\src\\\\pages\\\\AddCheck.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from \"../components/Header\";\nimport { Button, Container, Dropdown, Form, FormGroup } from \"react-bootstrap\";\nimport { getChecklists } from \"../http/checklistApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCheck = () => {\n  _s();\n  const [checklists, setCheckLists] = useState([]);\n  const [selectedChecklists, setSelectedChecklists] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  useEffect(() => {\n    getChecklists().then(checklists => {\n      setCheckLists(checklists);\n    });\n  }, []);\n  const handleCheckboxChange = checklistTitle => {\n    const foundChecklist = checklists.find(checklist => checklist.title === checklistTitle);\n    if (foundChecklist && !foundChecklist.checked) {\n      setCheckLists(lists => {\n        return lists.map(list => {\n          if (list.title === foundChecklist.title) {\n            return {\n              title: list.title,\n              checked: true\n            };\n          }\n          return list;\n        });\n      });\n    }\n  };\n  const handleDropdownToggle = (isOpen, metadata) => {\n    if (!isOpen && metadata.source === \"select\") {\n      console.log(\"must open\");\n      setShowDropdown(true);\n    } else {\n      setShowDropdown(isOpen);\n    }\n  };\n  const renderChecklists = () => {\n    return checklists.map((_ref, index) => {\n      let {\n        title,\n        checked\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: title,\n          checked: checked,\n          onChange: () => handleCheckboxChange(title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-3\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          show: showDropdown,\n          onToggle: (nextShow, meta) => handleDropdownToggle(nextShow, meta),\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"dark\",\n            id: \"dropdown-checkbox\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043E\\u0447\\u043D\\u044B\\u0435 \\u043B\\u0438\\u0441\\u0442\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: renderChecklists()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(AddCheck, \"a4+jvin09WPQJAQYMVqtya2DUYI=\");\n_c = AddCheck;\nexport default AddCheck;\nvar _c;\n$RefreshReg$(_c, \"AddCheck\");","map":{"version":3,"names":["React","useEffect","useState","Header","Button","Container","Dropdown","Form","FormGroup","getChecklists","jsxDEV","_jsxDEV","AddCheck","_s","checklists","setCheckLists","selectedChecklists","setSelectedChecklists","showDropdown","setShowDropdown","then","handleCheckboxChange","checklistTitle","foundChecklist","find","checklist","title","checked","lists","map","list","handleDropdownToggle","isOpen","metadata","source","console","log","renderChecklists","_ref","index","Item","children","Check","type","label","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","Label","Control","placeholder","show","onToggle","nextShow","meta","Toggle","variant","id","Menu","_c","$RefreshReg$"],"sources":["C:/Users/rusla/Desktop/Курсач/Practice/client/src/pages/AddCheck.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Header from \"../components/Header\";\r\nimport {Button, Container, Dropdown, Form, FormGroup} from \"react-bootstrap\";\r\nimport {getChecklists} from \"../http/checklistApi\";\r\n\r\nconst AddCheck = () => {\r\n    const [checklists, setCheckLists] = useState([]);\r\n    const [selectedChecklists, setSelectedChecklists] = useState([]);\r\n    const [showDropdown, setShowDropdown] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getChecklists().then(checklists => {\r\n            setCheckLists(checklists);\r\n        });\r\n    }, []);\r\n\r\n    const handleCheckboxChange = (checklistTitle) => {\r\n        const foundChecklist = checklists.find(checklist => checklist.title === checklistTitle);\r\n\r\n        if(foundChecklist && !foundChecklist.checked) {\r\n            setCheckLists(lists => {\r\n                return lists.map(list => {\r\n                    if(list.title === foundChecklist.title) {\r\n                        return {title: list.title, checked: true};\r\n                    }\r\n                    return list;\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleDropdownToggle = (isOpen, metadata) => {\r\n        if(!isOpen && metadata.source === \"select\") {\r\n            console.log(\"must open\")\r\n            setShowDropdown(true);\r\n        } else {\r\n            setShowDropdown(isOpen);\r\n        }\r\n    };\r\n\r\n\r\n    const renderChecklists = () => {\r\n        return checklists.map(({title, checked}, index) => {\r\n            return (\r\n                <Dropdown.Item key={index}>\r\n                    <Form.Check\r\n                        type=\"checkbox\"\r\n                        label={title}\r\n                        checked={checked}\r\n                        onChange={() => handleCheckboxChange(title)}\r\n                    />\r\n                </Dropdown.Item>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Container className=\"mt-5\">\r\n                <h1 className=\"mb-3\">Добавить проверку</h1>\r\n                <Form>\r\n                    <FormGroup className=\"mb-3\">\r\n                        <Form.Label>Название компании</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Введите название компании\" />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"mb-3\">\r\n                        <Form.Label>Дата проверки</Form.Label>\r\n                        <Form.Control type=\"date\" />\r\n                    </FormGroup>\r\n\r\n                    <Dropdown show={showDropdown} onToggle={(nextShow, meta) => handleDropdownToggle(nextShow, meta)}  className=\"mb-4\">\r\n                        <Dropdown.Toggle  variant=\"dark\" id=\"dropdown-checkbox\">\r\n                            Выберите проверочные листы\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            {renderChecklists()}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <Button>Сохранить</Button>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddCheck;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}