{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rusla\\\\Desktop\\\\\\u041A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\Practice\\\\client\\\\src\\\\components\\\\AppRouter.js\";\nimport React from 'react';\nimport { Route, Routes } from \"react-router-dom\";\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: Component\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: Component\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Route","Routes","authRoutes","publicRoutes","jsxDEV","_jsxDEV","AppRouter","isAuth","children","map","_ref","path","Component","element","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","_c","$RefreshReg$"],"sources":["C:/Users/rusla/Desktop/Курсач/Practice/client/src/components/AppRouter.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Routes} from \"react-router-dom\";\r\nimport {authRoutes, publicRoutes} from \"../routes\";\r\n\r\nconst AppRouter = () => {\r\n    const isAuth = false;\r\n    return (\r\n        <Routes>\r\n            {isAuth && authRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} element={Component}/>\r\n            )}\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} element={Component} />\r\n            )}\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRouter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC/C,SAAQC,UAAU,EAAEC,YAAY,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMC,MAAM,GAAG,KAAK;EACpB,oBACIF,OAAA,CAACJ,MAAM;IAAAO,QAAA,GACFD,MAAM,IAAIL,UAAU,CAACO,GAAG,CAACC,IAAA;MAAA,IAAC;QAACC,IAAI;QAAEC;MAAS,CAAC,GAAAF,IAAA;MAAA,oBACxCL,OAAA,CAACL,KAAK;QAAYW,IAAI,EAAEA,IAAK;QAACE,OAAO,EAAED;MAAU,GAArCD,IAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAAC;IAAA,CACvD,CAAC,EACAd,YAAY,CAACM,GAAG,CAACS,KAAA;MAAA,IAAC;QAACP,IAAI;QAAEC;MAAS,CAAC,GAAAM,KAAA;MAAA,oBAChCb,OAAA,CAACL,KAAK;QAAYW,IAAI,EAAEA,IAAK;QAACE,OAAO,EAAED;MAAU,GAArCD,IAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CAAC;IAAA,CACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEjB,CAAC;AAACE,EAAA,GAZIb,SAAS;AAcf,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}